"use client";

import "./page.css";
import React from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import "bootstrap-icons/font/bootstrap-icons.css";
import { useState } from "react";
import Swal from "sweetalert2";

const Login = () => {
  const [admin_email, setAdminEmail] = useState("");
  const [admin_cardId, setAdmin_CardId] = useState("");

  const handleLogin = async () => {
      try {
        const response = await fetch("http://localhost:8750/loginAdmin/login", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ admin_email: admin_email, admin_cardId: admin_cardId }),
        });
    
        const data = await response.json();
    
        console.log("üîπ Response ‡∏à‡∏≤‡∏Å API:", data); 
    
        if (!response.ok) {
          alert(data.message);
          return;
        }
    
        localStorage.setItem("tokenAdmin", data.token);

    
        if (data.admin) {
          localStorage.setItem("admin", JSON.stringify(data.admin));
          console.log("Admin ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô LocalStorage:", data.admin);
        } else {
          console.warn("Admin ‡πÄ‡∏õ‡πá‡∏ô null ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏°‡∏≤!");
        }
    
        Swal.fire({
          title: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
          text: "‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô",
          icon: "success",
          confirmButtonText: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô",
        });
    
        window.location.href = "/admin/dashboard";
      } catch (error) {
        console.error("üö® Error:", error);
        Swal.fire({
          title: "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î!",
          text: "‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô",
          icon: "warning",
          confirmButtonText: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô",
        });
      }
    };
  return (
    <div className="login-wrapper">
      <div className="login-container">
        <div className="header">
          <h1>EasyBond</h1>
          <p>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà EasyBond</p>
          <span>‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</span>
        </div>
        <form onSubmit={(e) => e.preventDefault()}>
          <div className="input-group">
            <label>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
            <div className="input-wrapper">
              <i className="bi bi-person"></i>
              <input
                type="email"
                id="email"
                placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
                value={admin_email}
                onChange={(e) => setAdminEmail(e.target.value)}
                required
              />
            </div>
          </div>
          <div className="input-group">
            <label>‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
            <div className="input-wrapper">
              <i className="bi bi-lock"></i>
              <input
                type="password"
                id="password"
                placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
                value={admin_cardId}
                onChange={(e) => setAdmin_CardId(e.target.value)}
                required
              />
            </div>
          </div>
          <div>
            <button type="button" className="btn-primary" onClick={handleLogin}>
              ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default Login;
